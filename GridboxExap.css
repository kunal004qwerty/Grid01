
    /* We’ll go mobile first here */
.band{

    width: 90%;
    max-width: 1240px;
    margin: 0 auto;

    display: grid;
    
    grid-template-columns: 1fr ;
    grid-template-rows:auto ;
    grid-gap: 20px;


}

/* On wider viewports (500px is completely arbitrary), we’ll change the grid-template-columns
  to give us a possible two cards per row. Now there are two columns, each being one of the
  available two fractions */
@media only screen and (min-width:500px){
    .band{
        grid-template-columns: 1fr 1fr;
    }
}

/* Lastly, for larger screens we’ll go with a four column layout. */
@media only screen and (min-width: 850px) {
    .band {
      grid-template-columns: 1fr 1fr 1fr 1fr;
    }
  }
.card{
    background: white;
    text-decoration: none;
    color: #444;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);

    display: flex;
    flex-direction: column;

    min-height: 100%;
    /* astly we declare min-height: 100%; in order that all the cards fill the height of the parent (our grid item). */

    position: relative;
    top: 0;
    transition: all .1s ease-in;
}
.card:hover{
    top: -2px;
    box-shadow: 0 4px 5px rgba(0,0,0,0.2);
}

.card article{
    padding: 20px;
}
/* typography */
.card h1{
    font-size: 20px;
    margin: 0;
    color: #333;
}
.card p{
    line-height: 22px;
}
.card span{
    font-size: 12px;
    font-weight: bold;
    color: #999;
    text-transform: uppercase;
    letter-spacing: .05em;
    margin: 2em 0 0 0;
}
.card .thumb {
    padding-bottom: 60%;
    background-size: cover;
    background-position: center center;
}

.card article {
    padding: 20px;
    flex: 1;
     
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  .card p { 
    flex: 1; /* make p grow to fill available space*/
    line-height: 1.4;
  }

  @media only screen and (min-width: 500px) {
 
  .item-1 {
    grid-column: 1/ span 2;
  }
   
}